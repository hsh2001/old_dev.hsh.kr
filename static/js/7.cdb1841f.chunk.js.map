{"version":3,"sources":["hooks/uesScrollSize.ts","../node_modules/@agilie/canvas-image-cover-position/index.js","scss/components/CRIPage.module.scss","components/CRIPage.tsx"],"names":["useScrollSize","animationSectionID","animationWrapperID","useState","scrollSize","setScrollSize","useEffect","eventHandler","thisValue","animationSection","document","getElementById","wrapper","top","getBoundingClientRect","Math","abs","height","y","innerHeight","window","remainingScrollSize","max","min","addEventListener","setInterval","factory","contentWidth","contentHeight","containerWidth","containerHeight","offsetLeft","offsetTop","resultHeight","resultWidth","contentRatio","width","module","exports","frames","Array","fill","map","e","i","image","Image","src","toFixed","split","promise","Promise","resolve","onload","CRIPage","innerWidth","setWidth","setHeight","opacity","setOpacity","canvas","ctx","getContext","floor","length","imageCoverSize","getCoverSize","naturalWidth","naturalHeight","globalAlpha","clearRect","drawImage","className","style","id"],"mappings":"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","file":"static/js/7.cdb1841f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useScrollSize(\n  animationSectionID: string,\n  animationWrapperID: string,\n): number {\n  const [scrollSize, setScrollSize] = useState(0);\n\n  useEffect(() => {\n    function eventHandler(thisValue: object | null): void {\n      const animationSection = document.getElementById(\n        animationSectionID,\n      ) as HTMLElement;\n\n      const wrapper = document.getElementById(\n        animationWrapperID,\n      ) as HTMLElement;\n\n      const { top } = animationSection.getBoundingClientRect();\n\n      if (!thisValue || Math.abs(top) < 100) {\n        const { height, y } = wrapper.getBoundingClientRect();\n        const { innerHeight } = window;\n        const remainingScrollSize =\n          (height + y - innerHeight) / (innerHeight * 2);\n        const scrollSize = 1 - Math.max(0, Math.min(1, remainingScrollSize));\n\n        setScrollSize(scrollSize);\n      }\n    }\n\n    eventHandler(null);\n    window.addEventListener('scroll', eventHandler);\n    window.addEventListener('resize', eventHandler);\n    setInterval(eventHandler, 30);\n\n    // eslint-disable-next-line\n  }, []);\n\n  return scrollSize;\n}\n\nexport default useScrollSize;\n","\n// The MIT License (MIT) Copyright Â© 2019 Agilie Team https://www.agilie.com/\n\n;(function webpackUniversalModuleDefinition(root, factory) {\n    if(typeof exports === 'object' && typeof module === 'object')\n        module.exports = factory();\n    else if(typeof define === 'function' && define.amd)\n        define([], factory);\n    else if(typeof exports === 'object')\n        exports[\"getCoverSize\"] = factory();\n    else {\n        root[\"canvasImageCoverPosition\"] = root[\"getCoverSize\"] = factory();\n    }\n})(window, function() {\n    return (function (contentWidth, contentHeight, containerWidth, containerHeight, offsetLeft, offsetTop) {\n            var contentRatio = contentWidth / contentHeight;\n            var containerRatio = containerWidth / containerHeight;\n            var resultHeight;\n            var resultWidth;\n            offsetLeft = typeof offsetLeft === 'undefined' ? 0.5 : offsetLeft;\n            offsetTop = typeof offsetTop === 'undefined' ? 0.5 : offsetTop;\n            if (contentRatio > containerRatio) {\n                resultHeight = containerHeight;\n                resultWidth = containerHeight * contentRatio;\n            }\n            else {\n                resultWidth = containerWidth;\n                resultHeight = containerWidth / contentRatio;\n            }\n            return {\n                width: resultWidth,\n                height: resultHeight,\n                offsetLeft:(containerWidth - resultWidth) * offsetLeft,\n                offsetTop: (containerHeight - resultHeight) * offsetTop\n            };\n        });\n});\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CRIPage_wrapper__1_qhZ\"};","import React, { useEffect, useState } from 'react';\nimport getCoverSize from '@agilie/canvas-image-cover-position';\nimport style from '../scss/components/CRIPage.module.scss';\nimport useScrollSize from '../hooks/uesScrollSize';\n\nconst animationWrapperID = 'cri-wrapper';\nconst animationSectionID = 'cri-animatin-section';\n\nexport const frames = Array(101)\n  .fill(null)\n  .map((e, i) => {\n    const image = new Image();\n    image.src =\n      '/image/cri-frames/' +\n      ((i + 1) / 10000).toFixed(4).split('.')[1] +\n      '.jpg';\n\n    return {\n      image,\n      promise: new Promise((resolve) => {\n        image.onload = (): void => resolve(image);\n      }),\n    };\n  });\n\nconst CRIPage: React.FC = () => {\n  const scrollSize = useScrollSize(animationSectionID, animationWrapperID);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const [opacity, setOpacity] = useState(0);\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    });\n  }, []);\n\n  useEffect(() => {\n    const canvas = document.getElementById(\n      animationSectionID,\n    ) as HTMLCanvasElement;\n\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    const { width, height } = canvas;\n    const { image } = frames[\n      Math.floor((frames.length - 1) * Math.min(1, scrollSize * 1.3))\n    ];\n\n    const imageCoverSize = getCoverSize(\n      image.naturalWidth,\n      image.naturalHeight,\n      canvas.width,\n      canvas.height,\n    );\n\n    ctx.globalAlpha = scrollSize * 5;\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(\n      image,\n      imageCoverSize.offsetLeft,\n      imageCoverSize.offsetTop,\n      imageCoverSize.width,\n      imageCoverSize.height,\n    );\n\n    if (scrollSize > 0.5) {\n      setOpacity(1);\n    } else {\n      setOpacity(0);\n    }\n  }, [scrollSize]);\n\n  return (\n    <>\n      <div className={style.wrapper} id={animationWrapperID}>\n        <canvas id={animationSectionID} width={width} height={height} />\n        <div style={{ opacity }}>\n          <h1>Cultural Resources</h1>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CRIPage;\n"],"sourceRoot":""}