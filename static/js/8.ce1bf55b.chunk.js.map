{"version":3,"sources":["hooks/uesScrollSize.ts","scss/components/AIOmokPage.module.scss","components/AIOmokPage.tsx"],"names":["useScrollSize","animationSectionID","animationWrapperID","useState","scrollSize","setScrollSize","useEffect","eventHandler","thisValue","animationSection","document","getElementById","wrapper","top","getBoundingClientRect","Math","abs","height","y","innerHeight","window","remainingScrollSize","max","min","addEventListener","setInterval","module","exports","omokImage","Image","drawOmokBoard","canvas","ctx","scale","width","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","fillStyle","arc","PI","fill","src","AIOmokPage","innerWidth","setWidth","setHeight","setTop","getContext","fillRect","globalAlpha","drawImage","newWidth","className","style","animationWrapper","id","mainContentWrapper","href","target","rel"],"mappings":"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","file":"static/js/8.ce1bf55b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useScrollSize(\n  animationSectionID: string,\n  animationWrapperID: string,\n): number {\n  const [scrollSize, setScrollSize] = useState(0);\n\n  useEffect(() => {\n    function eventHandler(thisValue: object | null): void {\n      const animationSection = document.getElementById(\n        animationSectionID,\n      ) as HTMLElement;\n\n      const wrapper = document.getElementById(\n        animationWrapperID,\n      ) as HTMLElement;\n\n      const { top } = animationSection.getBoundingClientRect();\n\n      if (!thisValue || Math.abs(top) < 100) {\n        const { height, y } = wrapper.getBoundingClientRect();\n        const { innerHeight } = window;\n        const remainingScrollSize =\n          (height + y - innerHeight) / (innerHeight * 2);\n        const scrollSize = 1 - Math.max(0, Math.min(1, remainingScrollSize));\n\n        setScrollSize(scrollSize);\n      }\n    }\n\n    eventHandler(null);\n    window.addEventListener('scroll', eventHandler);\n    window.addEventListener('resize', eventHandler);\n    setInterval(eventHandler, 30);\n\n    // eslint-disable-next-line\n  }, []);\n\n  return scrollSize;\n}\n\nexport default useScrollSize;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animationWrapper\":\"AIOmokPage_animationWrapper__3GUUK\",\"mainContentWrapper\":\"AIOmokPage_mainContentWrapper__2NTuI\"};","import React, { useState, useEffect } from 'react';\nimport useScrollSize from '../hooks/uesScrollSize';\nimport style from '../scss/components/AIOmokPage.module.scss';\n\nconst omokImage = new Image();\nomokImage.src = '/image/omok.jpg';\n\nfunction drawOmokBoard(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  scale: number,\n): void {\n  const { width, height } = canvas;\n\n  ctx.strokeStyle = '#000';\n  ctx.lineWidth = Math.max(7, width / 300);\n  ctx.beginPath();\n  ctx.moveTo(0, height / 2);\n  ctx.lineTo(width * scale, height / 2);\n  ctx.moveTo(width / 2, 0);\n  ctx.lineTo(width / 2, height * scale);\n  ctx.stroke();\n\n  ctx.fillStyle = '#000';\n  ctx.beginPath();\n  ctx.arc(width / 2, height / 2, width / 30, 0, 2 * Math.PI * scale);\n  ctx.fill();\n\n  ctx.strokeStyle = '#ddd';\n  ctx.beginPath();\n  ctx.arc(width / 2, height / 2, width / 30, 0, 2 * Math.PI * scale);\n  ctx.stroke();\n}\n\nconst animationWrapperID = 'ai-omok-wrapper';\nconst animationSectionID = 'ai-omok-animatin-section';\nconst AIOmokPage: React.FC = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const [top, setTop] = useState('0');\n  const scrollSize = useScrollSize(animationSectionID, animationWrapperID);\n\n  useEffect(() => {\n    const canvas = document.getElementById(\n      animationSectionID,\n    ) as HTMLCanvasElement;\n\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    const drawAnimationPoint = 0.5;\n\n    if (scrollSize < drawAnimationPoint) {\n      const { width, height } = canvas;\n      ctx.fillStyle = '#000';\n      ctx.fillRect(0, 0, width, height);\n      ctx.fillStyle = `rgba(240, 198, 143, ${scrollSize / drawAnimationPoint})`;\n      ctx.fillRect(0, 0, width, height);\n      drawOmokBoard(\n        canvas,\n        ctx,\n        Math.min(1, (scrollSize / drawAnimationPoint) * 2),\n      );\n\n      const { innerWidth, innerHeight } = window;\n      if (width !== innerWidth || height !== innerHeight) {\n        setWidth(innerWidth);\n        setHeight(innerHeight);\n        setTop('0');\n      }\n    } else {\n      const { width, height } = canvas;\n      ctx.fillStyle = '#f0c68f';\n      ctx.fillRect(0, 0, width, height);\n      drawOmokBoard(canvas, ctx, 1);\n      ctx.globalAlpha =\n        (scrollSize - drawAnimationPoint) / (1 - drawAnimationPoint);\n      ctx.drawImage(omokImage, 0, 0, width, height);\n      ctx.globalAlpha = 1;\n\n      const newWidth = Math.min(window.innerWidth * 0.9, 500);\n      if (width !== newWidth || height !== newWidth) {\n        setWidth(newWidth);\n        setHeight(newWidth);\n        setTop('1rem');\n      }\n    }\n  }, [width, height, scrollSize]);\n\n  return (\n    <>\n      <div className={style.animationWrapper} id={animationWrapperID}>\n        <canvas\n          id={animationSectionID}\n          width={width * 2}\n          height={height * 2}\n          style={{\n            width: width + 'px',\n            height: height + 'px',\n            top,\n          }}\n        />\n      </div>\n\n      <div className={style.mainContentWrapper}>\n        <h2>AI Omok</h2>\n        <h3>Play Omok With AI</h3>\n        <a\n          href=\"https://hsh-game.github.io/omok\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Play\n        </a>\n        {' / '}\n        <a\n          href=\"https://github.com/hsh-game/omok\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default AIOmokPage;\n"],"sourceRoot":""}